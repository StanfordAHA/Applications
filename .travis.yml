notifications:
  email: false
sudo: false
language: c
compiler:
  # Comment out for now to keep build matrix small
  - gcc
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.9
      - libedit-dev
      - libpng-dev
      - graphviz

env:
  # Configurations
  #
  # Each line in the ``env`` section represents a set of environment
  # variables passed to a build configuration
  #
  # Test a mix of llvm versions, a mix of build systems, and a mix of shared vs static library
  # Don't build as a static library with cmake. It risks exceeding the travis memory limit.
  - LLVM_VERSION=5.0.0 BUILD_SYSTEM=MAKE CXX_=g++-4.9 CC_=gcc-4.9

cache: apt

before_install:
  # set variables necessary for halide
  - source test/scripts/before_install_travis.sh
  # get the halide release
  - curl -s https://api.github.com/repos/StanfordAHA/Halide-to-Hardware/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | cut -d '"' -f 4 | wget -qi -
  - tar zxvf halide_distrib.tgz

install:
  # install framework specific to halide
  - test/scripts/install_travis.sh
  - pushd .
  - cd $TRAVIS_BUILD_DIR
  - pwd
  - git clone -b jeff_fp https://github.com/rdaly525/coreir.git
  - make -j2 -C coreir all
  - popd
  - pwd

script:
  - cd apps/hardware_benchmarks/tests/random_pipeline
  - make design-coreir-int-pointwise SEED=1
  - ./runall_cpu.sh | tee ../../../../cpu_results.log
  - ./runall_coreir.sh | tee ../../../../coreir_results.log
  - cd ../../../../
  - html_gen/make_html.sh cpu_results.log coreir_results.log

deploy:
  provider: pages
  local-dir: results
  skip-cleanup: true
  github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
  keep-history: true
  on:
    branch: master
